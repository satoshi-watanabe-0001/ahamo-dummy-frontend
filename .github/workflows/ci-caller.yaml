name: CI Pipeline

on:
  push:
    branches:
      - dev
      - test
      - feature/*
      - 'devin/**'
    tags:
      - 'prod-*'
      - 'dev-*'
      - 'test-*'
  pull_request:
    branches:
      - main
      - dev
      - test

env:
  ENV: ${{ github.ref_name == 'dev' && 'dev' || github.ref_name == 'test' && 'test' || startsWith(github.ref, 'refs/tags/prod-') && 'prod' || 'dev' }}

jobs:
  ci-init:
    name: 初期化
    runs-on: ubuntu-latest
    outputs:
      ENV_TYPE: ${{ steps.set-env.outputs.ENV_TYPE }}
      ENVIRONMENT: ${{ steps.set-env.outputs.ENVIRONMENT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: 環境変数設定
        id: set-env
        run: |
          if [[ "${{ env.ENV }}" == "prod" ]]; then
            echo "ENV_TYPE=prod" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=production" >> $GITHUB_OUTPUT
          else
            echo "ENV_TYPE=nprd" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=development" >> $GITHUB_OUTPUT
          fi
          echo "🔧 環境設定完了: ENV=${{ env.ENV }}, ENV_TYPE=$(echo $ENV_TYPE), ENVIRONMENT=$(echo $ENVIRONMENT)"

  ci-test:
    name: テスト実行
    runs-on: ubuntu-latest
    needs: ci-init
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: フロントエンドテスト実行
        run: |
          chmod +x .github/scripts/test.sh
          ./.github/scripts/test.sh

  ci-build:
    name: ビルド実行
    runs-on: ubuntu-latest
    needs: ci-init
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: フロントエンドビルド実行
        run: |
          chmod +x .github/scripts/copy.sh
          ./.github/scripts/copy.sh
          
      - name: ビルド成果物アップロード
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
